---
- name: retrieve first public key fingerprint 
  uri:
    url: https://robot-ws.your-server.de/key
    return_content: yes
    method: GET
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    status_code: 200
  register: key

 #- debug: var=key.json[0].key.fingerprint
- name: Store ssh key fingerprint in authorized_key
  set_fact:
    authorized_key: "{{ key.json[0].key.fingerprint }}"

- name: check rescue mode
  uri:
    url: "https://robot-ws.your-server.de/boot/{{ inventory_hostname }}/rescue"
    method: GET
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    status_code: 200
  register: rescue

#- debug: var=authorized_key
- name: activate rescue mode
  when:  rescue.json.rescue.active == false
  uri:
    url: https://robot-ws.your-server.de/boot/{{ inventory_hostname }}/rescue
    method: POST
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    body: "os=linux&arch=64&authorized_key={{ authorized_key }}"
    status_code: 200
    HEADER_Content-Type: "application/x-www-form-urlencoded"
  register: activated

#- debug: var=activated

- name: Execute hardware reset
  uri:
    url: https://robot-ws.your-server.de/reset/{{ inventory_hostname }}
    method: POST
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    body: "type=hw"
    status_code: 200
    HEADER_Content-Type: "application/x-www-form-urlencoded"
  register: reset

- name: add reverse dns entry 
  uri:
    url: https://robot-ws.your-server.de/rdns/{{ inventory_hostname }}
    return_content: yes
    method: POST
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    body: "ptr={{ hostname }}"
    force_basic_auth: yes
    status_code: 200,201
    HEADER_Content-Type: "application/x-www-form-urlencoded"

- name: remove server from local known_hosts file
  shell: ssh-keygen -R {{ inventory_hostname }}

- name: pause a bit for the hardware reset to kick in
  pause: seconds=180

- name: waiting for server to come back
  local_action: 
    module: wait_for 
      host={{ inventory_hostname }} 
      port=22 
      delay=1 
      timeout=60

